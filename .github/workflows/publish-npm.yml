name: Publish NPM Package

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          scope: "@durolabs"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Determine version bump
        id: version
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ "$PR_TITLE" == *"version:major"* ]]; then
            echo "bump=major" >> $GITHUB_OUTPUT
          elif [[ "$PR_TITLE" == *"version:minor"* ]]; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Bump version
        run: npm version ${{ steps.version.outputs.bump }} --no-commit-hooks --no-git-tag-version

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update dist-tag
        run: npm dist-tag add @durolabs/nats.js@$(node -p "require('./package.json').version") latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version changes and tags
        run: git push origin HEAD:main --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify published package
        run: |
          for i in {1..10}; do
            npm info @durolabs/nats.js | grep "$(node -p "require('./package.json').version")" && break || sleep 5;
          done
